from PyQt6.QtWidgets import (QWidget, QVBoxLayout, QHBoxLayout, QLabel, QScrollArea,
                             QFrame, QGridLayout, QSizePolicy, QMessageBox, QStackedWidget)
from PyQt6.QtCore import Qt
from PyQt6.QtGui import QFont, QPixmap

from controllers.data_controller import DataController
from utils.styles import Styles

from .health_report import HealthReportScreen
from .kegel_exercises import KegelExercisesScreen
from .weight_monitor import WeightMonitorScreen
from .kick_counter import KickCounterScreen
from .contraction_counter import ContractionCounterScreen
from .belly_tracker import BellyTrackerScreen
from .blood_pressure_monitor import BloodPressureMonitorScreen
from .wishlist import WishlistScreen


class ToolCard(QFrame):
    def __init__(self, title, description, icon_path, screen_class, accent_color="#FF8C00", parent=None):
        super().__init__(parent)
        self.screen_class = screen_class
        self.parent = parent
        self._setup_ui(title, description, icon_path, accent_color)

    def _setup_ui(self, title, description, icon_path, accent_color):
        self.setStyleSheet(Styles.tool_card_base())
        layout = QVBoxLayout(self)
        layout.setContentsMargins(15, 15, 15, 15)

        header_layout = QHBoxLayout()
        icon_label = self._create_icon(icon_path, accent_color)
        title_label = self._create_title(title, accent_color)

        header_layout.addWidget(icon_label)
        header_layout.addWidget(title_label)
        header_layout.addStretch()

        desc_label = QLabel(description)
        desc_label.setWordWrap(True)
        desc_label.setStyleSheet(Styles.tool_card_description())
        desc_label.setSizePolicy(QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Expanding)

        layout.addLayout(header_layout)
        layout.addWidget(desc_label)
        layout.addStretch()
        self.setSizePolicy(QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Expanding)

    def _create_icon(self, icon_path, accent_color):
        icon_label = QLabel()
        try:
            pixmap = QPixmap(icon_path)
            if not pixmap.isNull():
                icon_label.setPixmap(pixmap.scaled(40, 40, Qt.AspectRatioMode.KeepAspectRatio,
                                                   Qt.TransformationMode.SmoothTransformation))
                icon_label.setFixedSize(40, 40)
                icon_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
                return icon_label
        except Exception:
            pass

        icon_label.setText("üîß")
        icon_label.setStyleSheet(Styles.tool_icon_fallback(accent_color))
        icon_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        return icon_label

    def _create_title(self, title, accent_color):
        title_label = QLabel(title)
        title_label.setObjectName("titleLabel")
        title_label.setFont(QFont('Arial', 16, QFont.Weight.Bold))
        title_label.setStyleSheet(Styles.tool_card_title(accent_color))
        return title_label

    def mousePressEvent(self, event):
        super().mousePressEvent(event)
        if not self.screen_class:
            return

        try:
            tool_screen = self.screen_class(self.parent)
            main_stack = self._find_main_stack()

            if main_stack:
                index = main_stack.addWidget(tool_screen)
                main_stack.setCurrentIndex(index)
            else:
                QMessageBox.warning(self, "–ü–æ–º–∏–ª–∫–∞", "–ù–µ –≤–¥–∞–ª–æ—Å—è –≤—ñ–¥–∫—Ä–∏—Ç–∏ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç")
        except Exception as e:
            QMessageBox.critical(self, "–ü–æ–º–∏–ª–∫–∞", f"–ù–µ –≤–¥–∞–ª–æ—Å—è –≤—ñ–¥–∫—Ä–∏—Ç–∏ —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç: {str(e)}")

    def _find_main_stack(self):
        if hasattr(self.parent, 'parent') and self.parent.parent:
            for child in self.parent.parent.findChildren(QStackedWidget):
                return child
        return None


class ToolsScreen(QWidget):
    def __init__(self, parent=None):
        super().__init__(parent)
        self.parent = parent
        self.data_controller = DataController()
        self._setup_ui()

    def _setup_ui(self):
        main_layout = QVBoxLayout(self)
        main_layout.setContentsMargins(0, 0, 0, 0)
        main_layout.setSpacing(0)

        main_layout.addWidget(self._create_header())
        main_layout.addWidget(self._create_content())

    def _create_header(self):
        header = QWidget()
        header.setMinimumHeight(60)
        header.setStyleSheet(Styles.header())

        header_layout = QHBoxLayout(header)
        header_layout.setContentsMargins(15, 5, 15, 5)

        tools_label = QLabel("–Ü–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏")
        tools_label.setFont(QFont('Arial', 18, QFont.Weight.Bold))
        tools_label.setStyleSheet(Styles.text_accent())
        header_layout.addWidget(tools_label)

        return header

    def _create_content(self):
        scroll_area = QScrollArea()
        scroll_area.setWidgetResizable(True)
        scroll_area.setStyleSheet(Styles.scroll_area())
        scroll_area.setSizePolicy(QSizePolicy.Policy.Expanding, QSizePolicy.Policy.Expanding)

        content_widget = QWidget()
        content_layout = QVBoxLayout(content_widget)
        content_layout.setContentsMargins(15, 15, 15, 15)
        content_layout.setSpacing(15)

        cards_grid = self._create_tools_grid()
        content_layout.addLayout(cards_grid)
        content_layout.addStretch(1)

        scroll_area.setWidget(content_widget)
        return scroll_area

    def _create_tools_grid(self):
        cards_grid = QGridLayout()
        cards_grid.setSpacing(15)

        tools_data = [
            ("–ó–≤—ñ—Ç –ø—Ä–æ –∑–¥–æ—Ä–æ–≤'—è –≤ PDF", "–°—Ç–≤–æ—Ä—ñ—Ç—å PDF-–∑–≤—ñ—Ç —ñ–∑ —É—Å—ñ–º–∞ –ø–æ–∫–∞–∑–Ω–∏–∫–∞–º–∏ –≤–∞—à–æ–≥–æ –∑–¥–æ—Ä–æ–≤'—è –∑–∞ –≤–∏–±—Ä–∞–Ω–∏–π –ø–µ—Ä—ñ–æ–¥.",
             "resources/images/tools/health_report.png", "#FF5252", HealthReportScreen),
            ("–í–ø—Ä–∞–≤–∏ –ö–µ–≥–µ–ª—è", "–Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—ó —Ç–∞ —Ç–∞–π–º–µ—Ä –¥–ª—è –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –≤–ø—Ä–∞–≤ –ö–µ–≥–µ–ª—è –ø—Ä–æ—Ç—è–≥–æ–º –≤–∞–≥—ñ—Ç–Ω–æ—Å—Ç—ñ.",
             "resources/images/tools/kegel.png", "#9C27B0", KegelExercisesScreen),
            ("–ú–æ–Ω—ñ—Ç–æ—Ä –≤–∞–≥–∏", "–í—ñ–¥—Å—Ç–µ–∂—É–π—Ç–µ –∑–º—ñ–Ω–∏ –≤–∞–≥–∏ –ø—Ä–æ—Ç—è–≥–æ–º –≤–∞–≥—ñ—Ç–Ω–æ—Å—Ç—ñ. –ü–æ—Ç–æ—á–Ω–∞ –≤–∞–≥–∞: 65.1 –∫–≥",
             "resources/images/tools/weight_monitor.png", "#757575", WeightMonitorScreen),
            ("–õ—ñ—á–∏–ª—å–Ω–∏–∫ –ø–æ—à—Ç–æ–≤—Ö—ñ–≤", "–†–∞—Ö—É–π—Ç–µ —ñ –∑–∞–ø–∏—Å—É–π—Ç–µ –ø–æ—à—Ç–æ–≤—Ö–∏ –¥–∏—Ç–∏–Ω–∏ –¥–ª—è –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É —ó—ó –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ.",
             "resources/images/tools/kick_counter.png", "#4CAF50", KickCounterScreen),
            ("–õ—ñ—á–∏–ª—å–Ω–∏–∫ –ø–µ—Ä–µ–π–º—ñ–≤", "–í–∏–º—ñ—Ä—é–π—Ç–µ —á–∞—Å—Ç–æ—Ç—É —Ç–∞ —Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—å –ø–µ—Ä–µ–π–º—ñ–≤ –ø—ñ–¥ —á–∞—Å –ø—ñ–¥–≥–æ—Ç–æ–≤–∫–∏ –¥–æ –ø–æ–ª–æ–≥—ñ–≤.",
             "resources/images/tools/contraction_counter.png", "#2196F3", ContractionCounterScreen),
            ("–í—ñ–¥—Å—Ç–µ–∂–µ–Ω–Ω—è —Ä–æ–∑–º—ñ—Ä—É –∂–∏–≤–æ—Ç–∞", "–ó–∞–ø–∏—Å—É–π—Ç–µ –∑–º—ñ–Ω–∏ —Ä–æ–∑–º—ñ—Ä—É –∂–∏–≤–æ—Ç–∞, —â–æ–± –≤—ñ–¥—Å—Ç–µ–∂—É–≤–∞—Ç–∏ —Ä—ñ—Å—Ç –¥–∏—Ç–∏–Ω–∏.",
             "resources/images/tools/belly_growth.png", "#FF9800", BellyTrackerScreen),
            ("–ú–æ–Ω—ñ—Ç–æ—Ä —Ç–∏—Å–∫—É", "–ö–æ–Ω—Ç—Ä–æ–ª—é–π—Ç–µ –∞—Ä—Ç–µ—Ä—ñ–∞–ª—å–Ω–∏–π —Ç–∏—Å–∫ –ø—Ä–æ—Ç—è–≥–æ–º –≤–∞–≥—ñ—Ç–Ω–æ—Å—Ç—ñ.",
             "resources/images/tools/pressure_monitor.png", "#E91E63", BloodPressureMonitorScreen),
            ("–°–ø–∏—Å–æ–∫ –±–∞–∂–∞–Ω—å", "–°—Ç–≤–æ—Ä—ñ—Ç—å —Å–ø–∏—Å–æ–∫ —Ä–µ—á–µ–π, —è–∫—ñ –ø–æ—Ç—Ä—ñ–±–Ω–æ –ø—Ä–∏–¥–±–∞—Ç–∏ –¥–ª—è –≤–∞—Å —Ç–∞ –¥–∏—Ç–∏–Ω–∏.",
             "resources/images/tools/wishlist.png", "#673AB7", WishlistScreen)
        ]

        for i, (title, description, icon, color, screen_class) in enumerate(tools_data):
            card = ToolCard(title, description, icon, screen_class, color, self)
            cards_grid.addWidget(card, i // 2, i % 2)

        return cards_grid